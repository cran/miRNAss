// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// calcDistance
NumericVector calcDistance(const IntegerVector& p, const IntegerVector& idx, const NumericVector& x, const NumericVector& y);
RcppExport SEXP miRNAss_calcDistance(SEXP pSEXP, SEXP idxSEXP, SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const IntegerVector& >::type p(pSEXP);
    Rcpp::traits::input_parameter< const IntegerVector& >::type idx(idxSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(calcDistance(p, idx, x, y));
    return rcpp_result_gen;
END_RCPP
}
// calcThreshold
double calcThreshold(const NumericVector& ye, const NumericVector& yt, int objective);
RcppExport SEXP miRNAss_calcThreshold(SEXP yeSEXP, SEXP ytSEXP, SEXP objectiveSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const NumericVector& >::type ye(yeSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type yt(ytSEXP);
    Rcpp::traits::input_parameter< int >::type objective(objectiveSEXP);
    rcpp_result_gen = Rcpp::wrap(calcThreshold(ye, yt, objective));
    return rcpp_result_gen;
END_RCPP
}
// edgeListKnn
NumericMatrix edgeListKnn(const NumericMatrix& x, const NumericVector& y, const int nn, const int threadNumber);
RcppExport SEXP miRNAss_edgeListKnn(SEXP xSEXP, SEXP ySEXP, SEXP nnSEXP, SEXP threadNumberSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const NumericMatrix& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type y(ySEXP);
    Rcpp::traits::input_parameter< const int >::type nn(nnSEXP);
    Rcpp::traits::input_parameter< const int >::type threadNumber(threadNumberSEXP);
    rcpp_result_gen = Rcpp::wrap(edgeListKnn(x, y, nn, threadNumber));
    return rcpp_result_gen;
END_RCPP
}
